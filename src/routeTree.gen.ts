/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AppSipTrunksRouteImport } from './pages/_app/sip.trunks'
import { Route as AppSipBranchsRouteImport } from './pages/_app/sip.branchs'

const AppSipTrunksRoute = AppSipTrunksRouteImport.update({
  id: '/_app/sip/trunks',
  path: '/sip/trunks',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSipBranchsRoute = AppSipBranchsRouteImport.update({
  id: '/_app/sip/branchs',
  path: '/sip/branchs',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/sip/branchs': typeof AppSipBranchsRoute
  '/sip/trunks': typeof AppSipTrunksRoute
}
export interface FileRoutesByTo {
  '/sip/branchs': typeof AppSipBranchsRoute
  '/sip/trunks': typeof AppSipTrunksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/sip/branchs': typeof AppSipBranchsRoute
  '/_app/sip/trunks': typeof AppSipTrunksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sip/branchs' | '/sip/trunks'
  fileRoutesByTo: FileRoutesByTo
  to: '/sip/branchs' | '/sip/trunks'
  id: '__root__' | '/_app/sip/branchs' | '/_app/sip/trunks'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppSipBranchsRoute: typeof AppSipBranchsRoute
  AppSipTrunksRoute: typeof AppSipTrunksRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/sip/trunks': {
      id: '/_app/sip/trunks'
      path: '/sip/trunks'
      fullPath: '/sip/trunks'
      preLoaderRoute: typeof AppSipTrunksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/sip/branchs': {
      id: '/_app/sip/branchs'
      path: '/sip/branchs'
      fullPath: '/sip/branchs'
      preLoaderRoute: typeof AppSipBranchsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AppSipBranchsRoute: AppSipBranchsRoute,
  AppSipTrunksRoute: AppSipTrunksRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
