/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AppLayoutRouteImport } from './pages/_app/_layout'
import { Route as AppLayoutSipTrunksRouteImport } from './pages/_app/_layout.sip.trunks'
import { Route as AppLayoutSipBranchsRouteImport } from './pages/_app/_layout.sip.branchs'

const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_app/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutSipTrunksRoute = AppLayoutSipTrunksRouteImport.update({
  id: '/sip/trunks',
  path: '/sip/trunks',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutSipBranchsRoute = AppLayoutSipBranchsRouteImport.update({
  id: '/sip/branchs',
  path: '/sip/branchs',
  getParentRoute: () => AppLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sip/branchs': typeof AppLayoutSipBranchsRoute
  '/sip/trunks': typeof AppLayoutSipTrunksRoute
}
export interface FileRoutesByTo {
  '/sip/branchs': typeof AppLayoutSipBranchsRoute
  '/sip/trunks': typeof AppLayoutSipTrunksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/_layout': typeof AppLayoutRouteWithChildren
  '/_app/_layout/sip/branchs': typeof AppLayoutSipBranchsRoute
  '/_app/_layout/sip/trunks': typeof AppLayoutSipTrunksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sip/branchs' | '/sip/trunks'
  fileRoutesByTo: FileRoutesByTo
  to: '/sip/branchs' | '/sip/trunks'
  id:
    | '__root__'
    | '/_app/_layout'
    | '/_app/_layout/sip/branchs'
    | '/_app/_layout/sip/trunks'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/_layout': {
      id: '/_app/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/_layout/sip/trunks': {
      id: '/_app/_layout/sip/trunks'
      path: '/sip/trunks'
      fullPath: '/sip/trunks'
      preLoaderRoute: typeof AppLayoutSipTrunksRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/_layout/sip/branchs': {
      id: '/_app/_layout/sip/branchs'
      path: '/sip/branchs'
      fullPath: '/sip/branchs'
      preLoaderRoute: typeof AppLayoutSipBranchsRouteImport
      parentRoute: typeof AppLayoutRoute
    }
  }
}

interface AppLayoutRouteChildren {
  AppLayoutSipBranchsRoute: typeof AppLayoutSipBranchsRoute
  AppLayoutSipTrunksRoute: typeof AppLayoutSipTrunksRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutSipBranchsRoute: AppLayoutSipBranchsRoute,
  AppLayoutSipTrunksRoute: AppLayoutSipTrunksRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
